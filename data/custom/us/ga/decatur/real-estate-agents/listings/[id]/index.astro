---
import ImageSlider from "../src/astro/components/ImageSlider.astro";
import Default from "../src/astro/components/Default.astro";
import data from "./data.json";
export function getStaticPaths() {
  return (data.listings_details || []).map((listing: { id: number }) => ({
    params: { id: listing.id.toString() },
  }));
}
const id = Astro.params.id;
const listing = (data.listings_details || []).find((item: { id: number }) => item.id.toString() === id);
const maxLength = 250;
const truncatedText =
  listing.detail_description.length > maxLength
    ? listing.detail_description.slice(0, maxLength) + "..."
    : listing.detail_description;
// const relatedListings = data.listings
//   .filter((item: { id: number }) => item.id.toString() !== id)
//   .sort(() => Math.random() - 0.5)
//   .slice(0, 3);
//   console.log(data.listings);
const currentId = data.listings_details.map(item => item.id)
const relatedListings = data.listings.filter(listing => !currentId.includes(listing.id))
---

<Default data={data}>
  <div slot="pageCustom">
    <div id="main-wrapper" class="mainContent">
      <div class="text-content">
        <div class="property-detail-container">
          <!-- Mobile image slider -->
          <ImageSlider gallery={listing.gallery || []}/>

          <!-- Content -->
          <div class="detail-container">
            <div class="left-column">
              <div class="content-header">
                <div class="status">
                  <span class="dot"></span> {listing.status}
                </div>
                <h2>{listing.price}</h2>
                <p>{listing.subStats}</p>
                <p>{listing.location}</p>
              </div>
              <div class="separator-dark"></div>
              <div class="content-description">
                <div class="content-left">
                  <ul class="property-stats no-padding">
                    <!-- Add stats as necessary -->
                  </ul>
                </div>
                <div class="content-right">
                  <div class="property-description">
                    <p id="description">
                      {
                        listing.detail_description.length > maxLength
                          ? truncatedText
                          : listing.detail_description
                      }
                    </p>
                    {
                      listing.detail_description.length > maxLength && (
                        <span class="read-more" id="readMore" data-fulltext={listing.detail_description} data-truncated={truncatedText}>
                          Read More +
                        </span>
                      )
                    }
                  </div>
                </div>
              </div>
              <div class="map">
                <h2>Map</h2>
                <iframe
                  src={listing.map.iframe_src}
                  width="100%"
                  height="20%"
                  style="border: 0;"
                  allowfullscreen
                  loading="lazy"
                  referrerpolicy="no-referrer-when-downgrade"
                >
                </iframe>
                <p class="map-address">{listing.location}</p>
              </div>
              <div class="separator-dark"></div>
              <div class="property-details">
                {
                  listing.interior_features && (
                    <div class="feature-details">
                      <div class="feature-title">
                        <img
                          src="https://img.icons8.com/ios/50/sofa.png"
                          alt="sofa"
                          width="20"
                          height="20"
                        />
                        <h3>Interior Features</h3>
                      </div>
                      <ul class="feature-list">
                        {listing.interior_features.map((feature, index) => (
                          <li key={index}>
                            <span class="feature-label">{feature.label}</span>
                            <ul class="feature-value">
                              {feature.value.map((row, rowIndex) => (
                                <li key={rowIndex}>{row}</li>
                              ))}
                            </ul>
                          </li>
                        ))}
                      </ul>
                    </div>
                  )
                }
                {listing.exterior_features && (
                  <div class="feature-details">
                  <div class="feature-title">
                    <img
                    src="https://img.icons8.com/ios/50/exterior.png"
                    alt="exterior"
                    width="20"
                    height="20"
                    />
                    <h3>Exterior/Building Features</h3>
                  </div>
                  <ul class="feature-list">
                    {listing.exterior_features.map((feature, index) => (
                    <li key={index}>
                      <span class="feature-label">{feature.label}</span>
                      <ul class="feature-value">
                      {feature.value.map((row, rowIndex) => (
                        <li key={rowIndex}>{row}</li>
                      ))}
                      </ul>
                    </li>
                    ))}
                  </ul>
                  </div>
                )}
                {listing.additional_info && (
                  <div class="feature-details">
                  <div class="feature-title">
                    <img
                    src="https://img.icons8.com/ios/50/features-list.png"
                    alt="features-list"
                    width="20"
                    height="20"
                    />
                    <h3>Additional Information</h3>
                  </div>
                  <ul class="feature-list">
                    {listing.additional_info.map((feature, index) => (
                    <li key={index}>
                      <span class="feature-label">{feature.label}</span>
                      <ul class="feature-value">
                      {feature.value.map((row, rowIndex) => (
                        <li key={rowIndex}>{row}</li>
                      ))}
                      </ul>
                    </li>
                    ))}
                  </ul>
                  </div>
                )}
              </div>
            </div>
            <div class="right-column">
              <div class="agent-card">
                <div class="agent-details">
                  <h3 class="agent-name">{data.agent.name}</h3>
                  <div class="agent-info">
                    <div class="mobile-info row-info">
                      <p class="label">Mobile number</p>
                      <p class="value">{data.agent.phone}</p>
                    </div>
                    <hr />
                    <div class="email-info row-info">
                      <p class="label">Email</p>
                      <p class="value">{data.agent.email}</p>
                    </div>
                  </div>
                </div>
                <div class="agent-contact">
                  <a
                    href="/us/ga/decatur/real-estate-agents/contact"
                    class="btn-primary">Contact agent</a
                  >
                </div>
              </div>
            </div>
          </div>
          <div class="separator-dark"></div>
          <!-- Similar homes -->
          <div class="related-listings">
            <h2>Similar homes</h2>
            <div class="related-listings-grid">
              {
                relatedListings.slice(0, 4).map((related) => (
                  <div class="related-listing-card" key={related.id}>
                    <img src={related.image} alt={`Image of ${related.location}`} />
                    <div class="status">
                      <span class="dot"></span> {related.status}
                    </div>
                    <h2>
                      {related.price}
                    </h2>
                    <p class="location">
                        {related.location}
                    </p>
                    <p class="sub-stats">
                        {related.subStats}
                    </p>
                    <a href={related.link} class="view-details">
                      View Details
                    </a>
                  </div>
                ))
              }
            </div>
          </div>
          <!-- <div class="related-listings">
            <h2>Similar homes</h2>
            <div class="related-listings-grid">
              {
                relatedListings.map((related) => (
                  <div class="related-listing-card" key={related.id}>
                    <img src={related.image} alt={related.title} />
                    <h4>
                      {related.title} - {related.price}
                    </h4>
                    <a href={related.link} class="view-details">
                      View Details
                    </a>
                  </div>
                ))
              }
            </div>
          </div> -->
        </div>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const readMore = document.getElementById("readMore")
      const description = document.getElementById("description")
      if(readMore && description) {
        const fullText = readMore.getAttribute('data-fulltext')
        const truncatedText = readMore.getAttribute("data-truncated")
        let isExpanded = false
        readMore.addEventListener("click", function() {
          isExpanded = !isExpanded
          description.textContent = isExpanded ? fullText : truncatedText
          readMore.textContent = isExpanded ? 'Read Less -' : 'Read More +'
        })
      }
    })
  </script>
</Default>
